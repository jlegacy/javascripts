<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0028)http://pastebin.com/SmrxuJQj -->
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		
		<title>[Java] MtGox API v2 JAVA Example - Pastebin.com</title>
		<link rel="shortcut icon" href="http://pastebin.com/favicon.ico">
<link href="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/java.css" rel="stylesheet" type="text/css">		<link href="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/main_v4.css" rel="stylesheet" type="text/css">
				
		<script type="text/javascript" async="" src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/ga.js"></script><script type="text/javascript" src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/jquery.js"></script>
		<script type="text/javascript" src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/main_v1.js"></script>
		<meta property="fb:app_id" content="231493360234820">
		<meta property="og:title" content="[Java] MtGox API v2 JAVA Example - Pastebin.com">
		<meta property="og:type" content="article">
	    <meta property="og:url" content="http://pastebin.com/SmrxuJQj">
	    <meta property="og:image" content="http://pastebin.com/i/fb2.jpg">
	    <meta property="og:site_name" content="Pastebin">
		<meta name="google-site-verification" content="jkUAIOE8owUXu8UXIhRLB9oHJsWBfOgJbZzncqHoF4A">
		<link rel="canonical" href="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/[Java] MtGox API v2 JAVA Example - Pastebin.com.htm">
				<!--[if SafMob]>
			<style>body{-webkit-text-size-adjust:none;}</style>
		<![endif]-->
		<script type="text/javascript">
		  var _gaq = _gaq || [];
		  _gaq.push(['_setAccount', 'UA-58643-34']);
		  _gaq.push(['_trackPageview']);
		  (function() {
		    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
		  })();
		</script>
	</head>
	<body>
	<div id="super_frame">
		<div id="logo" onclick="location.href=&#39;/&#39;" title="Create New Paste"></div>
		<div id="header">
			<div id="header_top">
				<span class="span_left more">PASTEBIN</span><span class="span_left less"> &nbsp;|&nbsp; #1 paste tool since 2002</span><span class="min_max_span narrow_it" title="Change layout width"></span><span class="min_max_span wide_it" style="display:none" title="Change layout width"></span>				<ul class="top_menu">
					<li class="no_border_li"><a href="http://pastebin.com/" accesskey="n">create new paste</a></li><li><a href="http://pastebin.com/tools">tools</a></li><li><a href="http://pastebin.com/api">api</a></li><li><a href="http://pastebin.com/archive">archive</a></li><li><a href="http://pastebin.com/faq">faq</a></li>
				</ul>
			</div>
			<div id="header_middle">
				<span class="span_left big"><a href="http://pastebin.com/">PASTEBIN</a></span> 
				<a href="http://twitter.com/pastebin" target="_blank"><img src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/t.gif" alt="" class="i_tf" width="122" height="20" border="0"></a>	<iframe src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/like.htm" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:100px; height:21px;margin:13px 0 0 10px;vertical-align:top" allowtransparency="true"></iframe>
				<div id="header_middle_search">
					<form class="search_form" name="search_form" method="get" action="http://pastebin.com/search" id="cse-search-box">
					    <input type="hidden" name="cx" value="partner-pub-7089230323117142:2864958357">
					    <input type="hidden" name="cof" value="FORID:10">
					    <input type="hidden" name="ie" value="UTF-8">
						<input class="search_input" type="text" name="q" size="5" value="" placeholder="search..." x-webkit-speech=""><input name="sa" class="search_button" src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/t.gif" alt="Search..." type="image" value="Search">
					</form>
				</div>					
			</div>
			<div id="header_bottom">
				<div class="div_top_menu">
					<img src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/t.gif" class="i_n" width="16" height="16" alt="" border="0"> <a href="http://pastebin.com/">create new paste</a> 
					&nbsp;&nbsp;&nbsp; <img src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/t.gif" class="i_t" width="16" height="16" alt="" border="0"> <a href="http://pastebin.com/trends">trending pastes</a>
				</div>
				<ul class="top_menu">
					<li class="no_border_li"><a href="http://pastebin.com/signup">sign up</a></li><li><a href="http://pastebin.com/login">login</a></li><li><a href="http://pastebin.com/alerts">my alerts</a></li><li><a href="http://pastebin.com/settings">my settings</a></li><li><a href="http://pastebin.com/profile">my profile</a></li>				</ul>		
			</div>			
		</div>

			<div class="frame_spacer"><!-- --></div>
			<div style="height:35px;line-height:35px;font-size:0.85em;"><span style="float:right;text-align:right;">Don't like ads? <a href="http://pastebin.com/pro">PRO users</a> don't see any ads ;-)</span><iframe scrolling="no" frameborder="0" allowtransparency="true" height="24" width="480" style="border:0;margin: 5px 0 0 0" src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/480x24.htm"></iframe></div>		<div class="frame_spacer"><!-- --></div>
		<div id="monster_frame">
			<div id="content_frame">
				<div id="content_right">
										<div class="content_right_menu">
									<div class="content_right_title"><a href="http://pastebin.com/archive">Public Pastes</a></div>	
									<div id="menu_2">
										<ul class="right_menu"><li><a href="http://pastebin.com/M2yfyBpd">Untitled</a><span>17 sec ago</span></li><li><a href="http://pastebin.com/iQ9jb442">Untitled</a><span>1 sec ago</span></li><li><a href="http://pastebin.com/eVKU5qMK">Untitled</a><span>5 sec ago</span></li><li><a href="http://pastebin.com/pQtaZ9Bv">Untitled</a><span>7 sec ago</span></li><li><a href="http://pastebin.com/rnWYdsxV">Untitled</a><span>8 sec ago</span></li><li><a href="http://pastebin.com/tpvGbEd2">Untitled</a><span>12 sec ago</span></li><li><a href="http://pastebin.com/JMMFPwSN">Untitled</a><span>17 sec ago</span></li><li><a href="http://pastebin.com/hP8AXfpM">Untitled</a><span>18 sec ago</span></li></ul></div></div>					
			<div style="padding: 0; width:300px;height:260px;clear:left;">
				<iframe src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/300x250_tribal_unsure.htm" width="300" height="250" scrolling="no" frameborder="0" name="ad3"></iframe>
			</div>					
			<div style="padding: 0 0 0 5px; width:290px;height:160px;clear:left;">
				<iframe src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/290x120.htm" width="290" height="160" scrolling="no" frameborder="0" name="ad4"></iframe>
			</div>				</div>
				<div id="content_left">
	<div class="paste_box_frame">
		<div class="tweet">
			<div onclick="facebookpopup(&#39;/SmrxuJQj&#39;); return false;" id="b_facebook2"><span id="b_facebook">0</span></div>
			<div onclick="twitpopup(&#39;/SmrxuJQj&#39;); return false;" id="b_twitter2"><span id="b_twitter">0</span></div>
		</div>
		<div class="paste_box_icon">
			<img src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/t.gif" class="i_gb" alt="Guest" border="0">	
		</div>
		<div class="paste_box_info">
			<div class="paste_box_line1" title="MtGox API v2 JAVA Example"><img src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/t.gif" class="i_p0" width="16" height="16" title="Public paste, everybody can see this paste." alt="" border="0"><h1>MtGox API v2 JAVA Example</h1> </div>
			<div class="paste_box_line2">By: a guest  on <span title="Monday 15th of April 2013 01:26:48 PM CDT" style="cursor:help">Apr 15th, 2013</span> &nbsp;|&nbsp; syntax: <a href="http://pastebin.com/archive/java">Java</a> &nbsp;|&nbsp; size: 3.32 KB &nbsp;|&nbsp; hits: 81 &nbsp;|&nbsp; expires: Never</div>
			<div class="paste_box_line3"><a href="http://pastebin.com/download.php?i=SmrxuJQj" rel="nofollow">download</a> &nbsp;|&nbsp; <a href="http://pastebin.com/raw.php?i=SmrxuJQj" target="_blank" rel="nofollow">raw</a> &nbsp;|&nbsp; <a href="http://pastebin.com/embed.php?i=SmrxuJQj" rel="nofollow">embed</a> &nbsp;|&nbsp; <a href="http://pastebin.com/report.php?i=SmrxuJQj" rel="nofollow">report abuse</a> &nbsp;|&nbsp; <a href="http://pastebin.com/print.php?i=SmrxuJQj" rel="nofollow">print</a></div>
		</div>
	</div>
	
			<div class="banner_728">
				<iframe src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/728x90_tribal_unsure.htm" width="728" height="90" scrolling="no" frameborder="0" name="ad2"></iframe>
			</div>
			<div class="layout_clear"></div><div id="code_frame2">
	<div id="code_frame">
		<div id="code_buttons">
		
		<a href="javascript:togglev();" title="Show/Hide line numbers"><img src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/t.gif" border="0" alt="" class="i16 line"></a> 
		<a href="javascript:togglew('java');" title="Toggle text wrapping"><img src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/t.gif" border="0" alt="" class="i16 wrap"></a> 
		<a href="http://pastebin.com/SmrxuJQj#" class="copyme" onclick="selectText(&#39;selectable&#39;);showdiv(&#39;copied&#39;);" title="Copy text to clipboard"><img src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/t.gif" border="0" alt="" class="i16 clipboard"></a> <span id="copied">Text below is selected. Please press Ctrl+C to copy to your clipboard. (âŒ˜+C on Mac)</span>

		</div>
		<div id="selectable">		
		<div class="java"><ol><li class="li1"><div class="de1"><span class="coMULTI">/*</span></div></li>
<li class="li2"><div class="de2"><span class="coMULTI">&nbsp;Testing:</span></div></li>
<li class="li1"><div class="de1"><span class="coMULTI">&nbsp; &nbsp;java api "money/info"</span></div></li>
<li class="li2"><div class="de2"><span class="coMULTI">&nbsp; &nbsp;java api "BTCUSD/money/ticker"</span></div></li>
<li class="li1"><div class="de1"><span class="coMULTI">&nbsp; &nbsp;java api "BTCUSD/money/order/quote" "type=bid&amp;amount=100000000"</span></div></li>
<li class="li2"><div class="de2"><span class="coMULTI">&nbsp;*/</span></div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2"><span class="kw1">import</span> <span class="co2">java.net.HttpURLConnection</span><span class="sy0">;</span></div></li>
<li class="li1"><div class="de1"><span class="kw1">import</span> <span class="co2">javax.net.ssl.HttpsURLConnection</span><span class="sy0">;</span></div></li>
<li class="li2"><div class="de2"><span class="kw1">import</span> <span class="co2">java.net.URL</span><span class="sy0">;</span></div></li>
<li class="li1"><div class="de1"><span class="kw1">import</span> <span class="co2">javax.crypto.Mac</span><span class="sy0">;</span></div></li>
<li class="li2"><div class="de2"><span class="kw1">import</span> <span class="co2">javax.crypto.spec.SecretKeySpec</span><span class="sy0">;</span></div></li>
<li class="li1"><div class="de1"><span class="kw1">import</span> <span class="co2">sun.misc.BASE64Decoder</span><span class="sy0">;</span></div></li>
<li class="li2"><div class="de2"><span class="kw1">import</span> <span class="co2">sun.misc.BASE64Encoder</span><span class="sy0">;</span></div></li>
<li class="li1"><div class="de1"><span class="kw1">import</span> <span class="co2">java.io.DataOutputStream</span><span class="sy0">;</span></div></li>
<li class="li2"><div class="de2"><span class="kw1">import</span> <span class="co2">java.io.DataInputStream</span><span class="sy0">;</span></div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2"><span class="kw1">public</span> <span class="kw1">class</span> api <span class="br0">{</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; <span class="kw1">private</span> <span class="kw3">String</span> key, secret, base<span class="sy0">;</span></div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw1">static</span> <span class="kw4">void</span> main<span class="br0">(</span><span class="kw3">String</span><span class="br0">[</span><span class="br0">]</span> args<span class="br0">)</span> <span class="br0">{</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">try</span> <span class="br0">{</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; api obj <span class="sy0">=</span> <span class="kw1">new</span> api<span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">(</span>args.<span class="me1">length</span> <span class="sy0">&gt;=</span> <span class="nu0">2</span><span class="br0">)</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; obj.<span class="me1">query</span><span class="br0">(</span>args<span class="br0">[</span><span class="nu0">0</span><span class="br0">]</span>,args<span class="br0">[</span><span class="nu0">1</span><span class="br0">]</span><span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">else</span> <span class="kw1">if</span> <span class="br0">(</span>args.<span class="me1">length</span> <span class="sy0">&gt;=</span> <span class="nu0">1</span><span class="br0">)</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; obj.<span class="me1">query</span><span class="br0">(</span>args<span class="br0">[</span><span class="nu0">0</span><span class="br0">]</span>,<span class="st0">""</span><span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">}</span> <span class="kw1">catch</span> <span class="br0">(</span><span class="kw3">Exception</span> ex<span class="br0">)</span> <span class="br0">{</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ex.<span class="me1">printStackTrace</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">}</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; <span class="br0">}</span></div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; <span class="kw1">public</span> api<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">this</span>.<span class="me1">key</span> <span class="sy0">=</span> <span class="st0">""</span><span class="sy0">;</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">this</span>.<span class="me1">secret</span> <span class="sy0">=</span> <span class="st0">""</span><span class="sy0">;</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">this</span>.<span class="me1">base</span> <span class="sy0">=</span> <span class="st0">"https://data.mtgox.com/api/2/"</span><span class="sy0">;</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; <span class="br0">}</span></div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw4">void</span> query<span class="br0">(</span><span class="kw3">String</span> path, <span class="kw3">String</span> post_data<span class="br0">)</span> <span class="kw1">throws</span> java.<span class="me1">io</span>.<span class="kw3">IOException</span> <span class="br0">{</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">try</span> <span class="br0">{</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">String</span> nonce <span class="sy0">=</span> <span class="st0">"nonce="</span> <span class="sy0">+</span> <span class="kw3">String</span>.<span class="me1">valueOf</span><span class="br0">(</span><span class="kw3">System</span>.<span class="me1">currentTimeMillis</span><span class="br0">(</span><span class="br0">)</span><span class="br0">)</span> <span class="sy0">+</span> <span class="st0">"000"</span><span class="sy0">;</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">(</span>post_data <span class="sy0">==</span> <span class="st0">""</span><span class="br0">)</span> <span class="br0">{</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; post_data <span class="sy0">=</span> nonce<span class="sy0">;</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">}</span> <span class="kw1">else</span> <span class="br0">{</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; post_data <span class="sy0">=</span> nonce <span class="sy0">+</span> <span class="st0">"&amp;"</span> <span class="sy0">+</span> post_data<span class="sy0">;</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">}</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">String</span> hash_data <span class="sy0">=</span> path <span class="sy0">+</span> <span class="st0">"<span class="es0">\0</span>"</span> <span class="sy0">+</span> post_data<span class="sy0">;</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">String</span> sig <span class="sy0">=</span> <span class="kw1">this</span>.<span class="me1">hmac</span><span class="br0">(</span><span class="kw1">this</span>.<span class="me1">secret</span>, hash_data<span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">URL</span> query <span class="sy0">=</span> <span class="kw1">new</span> <span class="kw3">URL</span><span class="br0">(</span><span class="kw1">this</span>.<span class="me1">base</span> <span class="sy0">+</span> path<span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span><span class="st0">"Post: "</span> <span class="sy0">+</span> post_data<span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span><span class="st0">"Hash: "</span> <span class="sy0">+</span> hash_data<span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span><span class="st0">"Sig: &nbsp;"</span> <span class="sy0">+</span> sig<span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; HttpsURLConnection c <span class="sy0">=</span> <span class="br0">(</span>HttpsURLConnection<span class="br0">)</span>query.<span class="me1">openConnection</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; c.<span class="me1">setRequestMethod</span><span class="br0">(</span><span class="st0">"POST"</span><span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; c.<span class="me1">setRequestProperty</span><span class="br0">(</span><span class="st0">"User-Agent"</span>,<span class="st0">"btc_bot"</span><span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; c.<span class="me1">setRequestProperty</span><span class="br0">(</span><span class="st0">"Rest-Key"</span>,<span class="kw1">this</span>.<span class="me1">key</span><span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; c.<span class="me1">setRequestProperty</span><span class="br0">(</span><span class="st0">"Rest-Sign"</span>,sig<span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; c.<span class="me1">setDoOutput</span><span class="br0">(</span><span class="kw2">true</span><span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; c.<span class="me1">setDoInput</span><span class="br0">(</span><span class="kw2">true</span><span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">DataOutputStream</span> output <span class="sy0">=</span> <span class="kw1">new</span> <span class="kw3">DataOutputStream</span><span class="br0">(</span>c.<span class="me1">getOutputStream</span><span class="br0">(</span><span class="br0">)</span><span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.<span class="me1">writeBytes</span><span class="br0">(</span>post_data<span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.<span class="me1">close</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span><span class="st0">""</span><span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">DataInputStream</span> input<span class="sy0">;</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">(</span>c.<span class="me1">getResponseCode</span><span class="br0">(</span><span class="br0">)</span> <span class="sy0">&gt;=</span> <span class="nu0">400</span><span class="br0">)</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input <span class="sy0">=</span> <span class="kw1">new</span> <span class="kw3">DataInputStream</span><span class="br0">(</span>c.<span class="me1">getErrorStream</span><span class="br0">(</span><span class="br0">)</span><span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">else</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input <span class="sy0">=</span> <span class="kw1">new</span> <span class="kw3">DataInputStream</span><span class="br0">(</span>c.<span class="me1">getInputStream</span><span class="br0">(</span><span class="br0">)</span><span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">for</span><span class="br0">(</span><span class="kw4">int</span> ch <span class="sy0">=</span> input.<span class="me1">read</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span> ch <span class="sy0">!=</span> <span class="sy0">-</span><span class="nu0">1</span><span class="sy0">;</span> ch <span class="sy0">=</span> input.<span class="me1">read</span><span class="br0">(</span><span class="br0">)</span><span class="br0">)</span> </div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">print</span><span class="br0">(</span><span class="br0">(</span><span class="kw4">char</span><span class="br0">)</span>ch<span class="br0">)</span><span class="sy0">;</span> </div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.<span class="me1">close</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span> </div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span><span class="st0">"<span class="es0">\n</span>"</span><span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">}</span> <span class="kw1">catch</span> <span class="br0">(</span><span class="kw3">Exception</span> ex<span class="br0">)</span> <span class="br0">{</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span><span class="st0">"Request Error:"</span><span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ex.<span class="me1">printStackTrace</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">}</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; <span class="br0">}</span></div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; <span class="kw1">public</span> <span class="kw3">String</span> hmac<span class="br0">(</span><span class="kw3">String</span> secret, <span class="kw3">String</span> msg<span class="br0">)</span> <span class="br0">{</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">try</span> <span class="br0">{</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">byte</span><span class="br0">[</span><span class="br0">]</span> bsecret <span class="sy0">=</span> <span class="br0">(</span><span class="kw1">new</span> BASE64Decoder<span class="br0">(</span><span class="br0">)</span><span class="br0">)</span>.<span class="me1">decodeBuffer</span><span class="br0">(</span>secret<span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SecretKeySpec spec <span class="sy0">=</span> <span class="kw1">new</span> SecretKeySpec<span class="br0">(</span>bsecret, <span class="st0">"HmacSHA512"</span><span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Mac mac <span class="sy0">=</span> Mac.<span class="me1">getInstance</span><span class="br0">(</span><span class="st0">"HmacSHA512"</span><span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; mac.<span class="me1">init</span><span class="br0">(</span>spec<span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">byte</span><span class="br0">[</span><span class="br0">]</span> bsig <span class="sy0">=</span> mac.<span class="me1">doFinal</span><span class="br0">(</span>msg.<span class="me1">getBytes</span><span class="br0">(</span><span class="br0">)</span><span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">String</span> sig <span class="sy0">=</span> <span class="br0">(</span><span class="kw1">new</span> BASE64Encoder<span class="br0">(</span><span class="br0">)</span><span class="br0">)</span>.<span class="me1">encode</span><span class="br0">(</span>bsig<span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> sig.<span class="me1">replaceAll</span><span class="br0">(</span><span class="st0">"<span class="es0">\n</span>"</span>,<span class="st0">""</span><span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">}</span> <span class="kw1">catch</span> <span class="br0">(</span><span class="kw3">Exception</span> ex<span class="br0">)</span> <span class="br0">{</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span><span class="st0">"HMAC Error"</span><span class="br0">)</span><span class="sy0">;</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <span class="st0">""</span><span class="sy0">;</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">}</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; <span class="br0">}</span></div></li>
<li class="li1"><div class="de1"><span class="br0">}</span></div></li>
</ol></div>
		</div>
	</div></div>
	<div class="content_title">
		<span class="span_right raw_links"><a href="http://pastebin.com/index/SmrxuJQj" rel="nofollow">create a <u>new version</u> of this paste</a></span>
		RAW Paste Data
	</div>
	<form class="paste_form" id="myform" method="post" action="http://pastebin.com/post.php">
		<div class="textarea_border">
			<textarea id="paste_code" class="paste_code" name="paste_code" onkeydown="return catchTab(this,event)" style="resize: none; height: 250px;">/*
 Testing:
   java api "money/info"
   java api "BTCUSD/money/ticker"
   java api "BTCUSD/money/order/quote" "type=bid&amp;amount=100000000"
 */

import java.net.HttpURLConnection;
import javax.net.ssl.HttpsURLConnection;
import java.net.URL;
import javax.crypto.Mac;
import javax.crypto.spec.SecretKeySpec;
import sun.misc.BASE64Decoder;
import sun.misc.BASE64Encoder;
import java.io.DataOutputStream;
import java.io.DataInputStream;

public class api {
    private String key, secret, base;

    public static void main(String[] args) {
        try {
            api obj = new api();
            if (args.length &gt;= 2)
                obj.query(args[0],args[1]);
            else if (args.length &gt;= 1)
                obj.query(args[0],"");
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public api() {
        this.key = "";
        this.secret = "";
        this.base = "https://data.mtgox.com/api/2/";
    }

    public void query(String path, String post_data) throws java.io.IOException {
        try {
            String nonce = "nonce=" + String.valueOf(System.currentTimeMillis()) + "000";
            if (post_data == "") {
                post_data = nonce;
            } else {
                post_data = nonce + "&amp;" + post_data;
            }
            String hash_data = path + "\0" + post_data;
            String sig = this.hmac(this.secret, hash_data);
            URL query = new URL(this.base + path);
            
            System.out.println("Post: " + post_data);
            System.out.println("Hash: " + hash_data);
            System.out.println("Sig:  " + sig);

            HttpsURLConnection c = (HttpsURLConnection)query.openConnection();
            c.setRequestMethod("POST");
            c.setRequestProperty("User-Agent","btc_bot");
            c.setRequestProperty("Rest-Key",this.key);
            c.setRequestProperty("Rest-Sign",sig);

            c.setDoOutput(true);
            c.setDoInput(true);

            DataOutputStream output = new DataOutputStream(c.getOutputStream());
            output.writeBytes(post_data);
            output.close();

            System.out.println("");

            DataInputStream input;
            if (c.getResponseCode() &gt;= 400)
                input = new DataInputStream(c.getErrorStream());
            else
                input = new DataInputStream(c.getInputStream());
            

            for(int ch = input.read(); ch != -1; ch = input.read()) 
                System.out.print((char)ch); 
            input.close(); 
            System.out.println("\n");
        } catch (Exception ex) {
            System.out.println("Request Error:");
            ex.printStackTrace();
        }
    }

    public String hmac(String secret, String msg) {
        try {
            byte[] bsecret = (new BASE64Decoder()).decodeBuffer(secret);
            SecretKeySpec spec = new SecretKeySpec(bsecret, "HmacSHA512");
            Mac mac = Mac.getInstance("HmacSHA512");
            mac.init(spec);
            byte[] bsig = mac.doFinal(msg.getBytes());
            String sig = (new BASE64Encoder()).encode(bsig);
            return sig.replaceAll("\n","");
        } catch (Exception ex) {
            System.out.println("HMAC Error");
            return "";
        }
    }
}</textarea>
		</div>			
	</form>
	<script type="text/javascript" language="javascript">
	$(document).ready(function(){
	$('textarea').autoResize({minHeight: 80,maxHeight: 250});
	geturl = "http://pastebin.com/SmrxuJQj";
		$.getJSON("http://graph.facebook.com/fql?q=SELECT total_count FROM link_stat WHERE url='http://pastebin.com/SmrxuJQj'",
	function(data) {
	$('#b_facebook').append(data.data[0].total_count);
	}); 
	$.getJSON('http://urls.api.twitter.com/1/urls/count.json?url='+geturl+'&callback=?',
	function(data) {
	$('#b_twitter').append(data.count);
	});
	})
    </script>						<div style="margin:10px 0;clear:left"></div>
					</div>
					<div class="frame_spacer"><!-- --></div>
					<div id="footer_top" style="clear:both">	
						<div class="footer_top_title">Pastebin.com Tools &amp; Applications</div>
						<div class="footer_top_text">
							<img src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/t.gif" alt="" class="icon24 iphone"><a href="http://pastebin.com/tools#iphone">iPhone/iPad</a>
							<img src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/t.gif" alt="" class="icon24 windows"><a href="http://pastebin.com/tools#windows">Windows</a>
							<img src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/t.gif" alt="" class="icon24 firefox"><a href="http://pastebin.com/tools#firefox">Firefox</a>
							<img src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/t.gif" alt="" class="icon24 chrome"><a href="http://pastebin.com/tools#chrome">Chrome</a>
							<img src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/t.gif" alt="" class="icon24 webos"><a href="http://pastebin.com/tools#webos">WebOS</a>
							<img src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/t.gif" alt="" class="icon24 android"><a href="http://pastebin.com/tools#android">Android</a>
							<img src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/t.gif" alt="" class="icon24 macos"><a href="http://pastebin.com/tools#macos">Mac</a>
							<img src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/t.gif" alt="" class="icon24 opera"><a href="http://pastebin.com/tools#opera">Opera</a>
							<img src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/t.gif" alt="" class="icon24 clickto"><a href="http://pastebin.com/tools#clickto">Click.to</a>
							<img src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/t.gif" alt="" class="icon24 unix"><a href="http://pastebin.com/tools#pastebincl">UNIX</a>
							<img src="./[Java] MtGox API v2 JAVA Example - Pastebin.com_files/t.gif" alt="" class="icon24 windowsphone"><a href="http://pastebin.com/tools#windowsphone">WinPhone</a>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div id="footer">
			<div id="logo_small"></div>
			<div id="footer_links">
				<a href="http://pastebin.com/">create new paste</a> &nbsp;|&nbsp; <a href="http://pastebin.com/api">api</a> &nbsp;|&nbsp; <a href="http://pastebin.com/trends">trends</a> &nbsp;|&nbsp; <a href="http://pastebin.com/users">users</a> &nbsp;|&nbsp; <a href="http://pastebin.com/faq">faq</a> &nbsp;|&nbsp; <a href="http://pastebin.com/tools">tools</a> &nbsp;|&nbsp; <a href="http://pastebin.com/privacy.php">privacy</a> &nbsp;|&nbsp; <a href="http://pastebin.com/contact">contact</a> &nbsp;|&nbsp; <a href="http://pastebin.com/stats">stats</a> &nbsp;|&nbsp; <a href="http://pastebin.com/pro">go pro</a> 
				<br>Follow us: <a href="http://www.facebook.com/pages/Pastebincom/150549571626327" target="_blank">pastebin on facebook</a> &nbsp;|&nbsp; <a href="http://twitter.com/#!/pastebin" target="blank">pastebin on twitter</a> &nbsp;|&nbsp; <a href="https://www.google.com/search?gl=us&pz=1&cf=all&ned=us&hl=en&tbm=nws&as_oq=pastebin&as_occt=any&as_qdr=d&authuser=0" target="_blank">pastebin in the news</a>


				<br>Pastebin v3.1 rendered in: 0.007 seconds				
			</div>
			<div id="footer_right" title="DDoS Protection and Dedicated Server provided by Gigenet.com" onclick="location.href=&#39;http://www.gigenet.com/&#39;"></div>
		</div>
		<script type="text/javascript">
		$('.narrow_it').click(function(){
		    $('#super_frame').animate({width:'100%'}, 500);
		    $('#footer').animate({width:'100%'}, 500);
			$(".narrow_it").hide();
			$(".wide_it").show();
			$.get('/layout.php', function(data) {
			});
		});
		$('.wide_it').click(function(){
		    $('#super_frame').animate({width:'1200px'}, 500);
		    $('#footer').animate({width:'1200px'}, 500);
			$(".wide_it").hide();
			$(".narrow_it").show();
			$.get('/layout.php', function(data) {
			});
		});
		</script>

	
<arclones><textarea class="paste_code ar1366847194076" onkeydown="return catchTab(this,event)" style="resize: none; overflow: hidden; line-height: 21px; text-decoration: none; letter-spacing: 0px; font-size: 12px; font-family: Consolas, Menlo, Monaco, &#39;Lucida Console&#39;, &#39;Liberation Mono&#39;, &#39;DejaVu Sans Mono&#39;, &#39;Bitstream Vera Sans Mono&#39;, monospace, serif; font-style: normal; font-weight: 400; text-transform: none; text-align: start; direction: ltr; word-spacing: 0px; padding: 8.4375px; width: 827.125px; position: absolute; top: -9999px; left: -9999px; opacity: 0; height: 0px;" tabindex="-1">/*
 Testing:
   java api "money/info"
   java api "BTCUSD/money/ticker"
   java api "BTCUSD/money/order/quote" "type=bid&amp;amount=100000000"
 */

import java.net.HttpURLConnection;
import javax.net.ssl.HttpsURLConnection;
import java.net.URL;
import javax.crypto.Mac;
import javax.crypto.spec.SecretKeySpec;
import sun.misc.BASE64Decoder;
import sun.misc.BASE64Encoder;
import java.io.DataOutputStream;
import java.io.DataInputStream;

public class api {
    private String key, secret, base;

    public static void main(String[] args) {
        try {
            api obj = new api();
            if (args.length &gt;= 2)
                obj.query(args[0],args[1]);
            else if (args.length &gt;= 1)
                obj.query(args[0],"");
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public api() {
        this.key = "";
        this.secret = "";
        this.base = "https://data.mtgox.com/api/2/";
    }

    public void query(String path, String post_data) throws java.io.IOException {
        try {
            String nonce = "nonce=" + String.valueOf(System.currentTimeMillis()) + "000";
            if (post_data == "") {
                post_data = nonce;
            } else {
                post_data = nonce + "&amp;" + post_data;
            }
            String hash_data = path + "\0" + post_data;
            String sig = this.hmac(this.secret, hash_data);
            URL query = new URL(this.base + path);
            
            System.out.println("Post: " + post_data);
            System.out.println("Hash: " + hash_data);
            System.out.println("Sig:  " + sig);

            HttpsURLConnection c = (HttpsURLConnection)query.openConnection();
            c.setRequestMethod("POST");
            c.setRequestProperty("User-Agent","btc_bot");
            c.setRequestProperty("Rest-Key",this.key);
            c.setRequestProperty("Rest-Sign",sig);

            c.setDoOutput(true);
            c.setDoInput(true);

            DataOutputStream output = new DataOutputStream(c.getOutputStream());
            output.writeBytes(post_data);
            output.close();

            System.out.println("");

            DataInputStream input;
            if (c.getResponseCode() &gt;= 400)
                input = new DataInputStream(c.getErrorStream());
            else
                input = new DataInputStream(c.getInputStream());
            

            for(int ch = input.read(); ch != -1; ch = input.read()) 
                System.out.print((char)ch); 
            input.close(); 
            System.out.println("\n");
        } catch (Exception ex) {
            System.out.println("Request Error:");
            ex.printStackTrace();
        }
    }

    public String hmac(String secret, String msg) {
        try {
            byte[] bsecret = (new BASE64Decoder()).decodeBuffer(secret);
            SecretKeySpec spec = new SecretKeySpec(bsecret, "HmacSHA512");
            Mac mac = Mac.getInstance("HmacSHA512");
            mac.init(spec);
            byte[] bsig = mac.doFinal(msg.getBytes());
            String sig = (new BASE64Encoder()).encode(bsig);
            return sig.replaceAll("\n","");
        } catch (Exception ex) {
            System.out.println("HMAC Error");
            return "";
        }
    }
}</textarea></arclones></body></html>